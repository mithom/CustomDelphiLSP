export enum baseType {
	int8 = "int8",
	int16 = "int16",
	int32 = "int32",
	int64 = "int64",
	uint8 = "uint8",
	uint16 = "uint16",
	uint32 = "uint32",
	uint64 = "uint64",
	boolean = "boolean",
	byteBool = "byteBool",
	wordBool = "wordBool",
	longBool = "longBool",
	char = "char",
	wideChar = "wideChar",
	ansiChar = "ansiChar",
	ucs2Char = "ucs2Char",
	ucs4Char = "ucs4Char",
	pointer = "pointer" //does pointer belong here as it is just an integer (32/64bit depending on platform)?
}

export type type = baseType | string

export enum reserved {
	and = "and",
	end = "end",
	interface = "interface",
	record = "record",
	vararray = "vararray",
	except = "except",
	is = "is",
	repeat = "repeat",
	while = "while",
	as = "as",
	exports = "exports",
	label = "label",
	resourcestring = "resourcestring",
	with = "with",
	asm = "asm",
	file = "file",
	library3 = "library3",
	set = "set",
	xorbegin = "xorbegin",
	finalization = "finalization",
	mod = "mod",
	shl = "shl",
	case = "case",
	finally = "finally",
	nil = "nil",
	shr = "shr",
	class = "class",
	for = "for",
	not = "not",
	string = "string",
	const = "const",
	function = "function",
	object = "object",
	then = "then",
	constructor = "constructor",
	goto = "goto",
	of = "of",
	threadvar = "threadvar",
	destructor = "destructor",
	if = "if",
	or = "or",
	to = "to",
	dispinterface = "dispinterface",
	implementation = "implementation",
	packed = "packed",
	try = "try",
	div = "div",
	in = "in",
	procedure = "procedure",
	type = "type",
	do = "do",
	inherited = "inherited",
	program = "program",
	unit = "unit",
	downto = "downto",
	initialization = "initialization",
	property = "property",
	until = "until",
	else = "else",
	inline = "inline",
	raise = "raise",
	uses = "uses"
}